plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.co.ias'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

	// https://mvnrepository.com/artifact/com.zaxxer/HikariCP
	implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.1'

	// https://mvnrepository.com/artifact/org.postgresql/postgresql
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.3'

	// JPA for crud Repository
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// https://mvnrepository.com/artifact/junit/junit
	testImplementation group: 'junit', name: 'junit', version: '4.12'





}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com/co/ias/Handyman/HandymanApplication.class",
					"com/co/ias/Handyman/application/person",
					"com/co/ias/Handyman/application/request",
					"com/co/ias/Handyman/application/service",
					"com/co/ias/Handyman/application/technical",
					"com/co/ias/Handyman/application/typeIdentification",
					"com/co/ias/Handyman/application/technicalRequest/domain",
					"com/co/ias/Handyman/application/technicalRequest/model",
					"com/co/ias/Handyman/infraestructure/adapters/out",
					"com/co/ias/Handyman/infraestructure/configurations",
					"com/co/ias/Handyman/shared/util/Constant.class",
					"com/co/ias/Handyman/shared/messages",
					"com/co/ias/Handyman/shared/errors"


			])
		}))
	}
}
